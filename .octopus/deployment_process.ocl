step "build-stage" {
    name = "Build Stage"

    action {
        action_type = "Octopus.Script"
        environments = ["build"]
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                $flyway_license_key = "$licensekey"
                $project_workspace = "$workspace"
                $env_JDBC = "jdbc:sqlserver://$server;authentication=sqlPassword;databaseName=WidgetZBuild;encrypt=true;trustServerCertificate=true"
                $FIRST_UNDO_SCRIPT = "002.20230703112421"
                $user = "$user"
                $password = "$password"
                
                
                
                $extractPath = $OctopusParameters["Octopus.Action.Package[AutoOctopus].ExtractedPath"]
                write-host $extractPath
                $migrationsPath = "$extractPath\migrations"
                write-host "MP $migrationsPath" 
                Get-ChildItem $migrationsPath
                
                flyway -user="$user" -password="$password" -locations="filesystem:$migrationsPath" -baselineOnMigrate="true" -licenseKey="$flyway_license_key" -configFiles="$extractPath\flyway.toml" info clean info -url="$env_JDBC" -cleanDisabled='false' -reportFilename="$extractPath\Reports\CleanDB"
                
                Get-ChildItem $migrationsPath
                flyway -user="$user" -locations="filesystem:$migrationsPath" -password="$password" -baselineOnMigrate="true" -licenseKey="$flyway_license_key" -configFiles="$extractPath\flyway.toml" info migrate info -url="$env_JDBC" -cleanDisabled='false' -reportFilename="$extractPath\Reports\ValidateVScripts"
                
                flyway -user="$user" -locations="filesystem:$migrationsPath" -password="$password" -baselineOnMigrate="true" -licenseKey="$flyway_license_key" -configFiles="$extractPath\flyway.toml" info undo info -url="$env_JDBC" -cleanDisabled='false' -target="$FIRST_UNDO_SCRIPT" -reportFilename="$extractPath\Reports/ValidateUScripts"
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "precisionpool"

        packages "AutoOctopus" {
            acquisition_location = "ExecutionTarget"
            feed = "autopilotrepo"
            package_id = "#{gitRepoID}"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "report-creation-prodution-release" {
    condition = "Always"
    name = "Report Creation - Prodution Release"

    action {
        action_type = "Octopus.Script"
        environments = ["staging"]
        is_required = true
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                cd "AutoOctopus"
                $flyway_license_key = "$licensekey"
                $project_workspace = "$workspace"
                $env_JDBC = "jdbc:sqlserver://$server;authentication=sqlPassword;databaseName=WidgetProd;encrypt=true;trustServerCertificate=true"
                $FIRST_UNDO_SCRIPT = "002.20230703112421"
                $user = "$user"
                $password = "$password"
                $FailOnDrift = "false"
                $buildUrl = "jdbc:sqlserver://$server;authentication=sqlPassword;databaseName=WidgetZCheck;encrypt=true;trustServerCertificate=true"
                
                
                $extractPath = $OctopusParameters["Octopus.Action.Package[AutoOctopus].ExtractedPath"]
                write-host $extractPath
                $migrationsPath = "$extractPath\migrations"
                write-host "MP $migrationsPath" 
                Get-ChildItem $migrationsPath
                
                flyway check -dryrun -changes -drift migrate info -locations="filesystem:$migrationsPath" -baselineOnMigrate="true" -licenseKey="$flyway_license_key" -configFiles="$project_workspace\flyway.toml" "-check.failOnDrift=$FailOnDrift" "-check.buildUrl=$buildUrl" "-check.buildUser=$user" "-check.buildPassword=$password" -url="$env_JDBC" -reportFilename="$extractPath\Reports\ProdReport.html" -user="$user" -password="$password"
                
                New-OctopusArtifact -Name "ProdReport.html" -Path "$extractPath\Reports\ProdReport.html"
                
                Copy-Item -Path "$extractPath\Reports\ProdReport.html" -Destination C:\Users\redgate\Desktop\ProdReport.html
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "precisionpool"

        packages "AutoOctopus" {
            acquisition_location = "Server"
            feed = "autopilotrepo"
            package_id = "#{gitRepoID}"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}

step "production-deployment" {
    condition = "Always"
    name = "Production Deployment"

    action {
        action_type = "Octopus.Script"
        environments = ["production"]
        is_required = true
        properties = {
            Octopus.Action.Script.ScriptBody = <<-EOT
                cd "AutoOctopus"
                $flyway_license_key = "$licensekey"
                $project_workspace = "$workspace"
                $env_JDBC = "jdbc:sqlserver://$server;authentication=sqlPassword;databaseName=WidgetProd;encrypt=true;trustServerCertificate=true"
                $FIRST_UNDO_SCRIPT = "002.20230703112421"
                $user = "$user"
                $password = "$password"
                
                $extractPath = $OctopusParameters["Octopus.Action.Package[AutoOctopus].ExtractedPath"]
                write-host $extractPath
                $migrationsPath = "$extractPath\migrations"
                write-host "MP $migrationsPath" 
                Get-ChildItem $migrationsPath
                
                
                flyway -user="$user" -password="$password" -baselineOnMigrate="true" -licenseKey="$flyway_license_key" -configFiles="$extractPath\flyway.toml" -locations="filesystem:$migrationsPath" info migrate info -url="$env_JDBC" -cleanDisabled='false' -reportFilename="$extractPath\Reports\CleanDB"
                
                
                EOT
            Octopus.Action.Script.ScriptSource = "Inline"
            Octopus.Action.Script.Syntax = "PowerShell"
        }
        worker_pool = "precisionpool"

        packages "AutoOctopus" {
            acquisition_location = "Server"
            feed = "autopilotrepo"
            package_id = "#{gitRepoID}"
            properties = {
                Extract = "True"
                Purpose = ""
                SelectionMode = "immediate"
            }
        }
    }
}